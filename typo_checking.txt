วิธีการตัดตัวที่พิมพ์ผิดออกจากชุดข้อมูล
1. ไล่หา backspace(8)
    ถ้าเจอให้นำออกจาก list และนำตัวก่อนหน้าออกด้วย(เพราะผู้ใช้ตั้งใจลบตัวนั้นออกอยู่แล้ว)
2. เทียบตำแหน่ง key code ตำแหน่งต่อตำแหน่ง
    ถ้า key code ของผู้ใช้ ไม่เท่า key code ของต้นฉบับ ให้ดู key code ตัวถัดไปของผู้ใช้
        ถ้าเท่ากับ key code ของต้นฉบับในตำแหน่งนี้ ให้ pop ค่า key code ของผู้ใช้ออก
        ถ้าไม่เท่า key code ของต้นฉบับในตำแหน่งนี้ ให้แทนที่ด้วย 0

รูปแบบพฤติกรรมของการพิมพ์ผิด
1. พิมพ์ผิดแล้วลบทันที(จะมีตัวเลข ตามด้วย backspace) # แก้ได้
2. พิมพ์ผิด 1 ตัวแล้วปล่อยผ่าน ตัวต่อไปพิมพ์ถูก ไม่มีการลบ(โค้ดจะไม่ตรงต้นฉบับ) # แก้ได้
3. พิมพ์ผิด n ตัวแล้วปล่อยผ่าน ตัวต่อไปพิมพ์ถูก ไม่มีการลบ(โค้ดจะไม่ตรงต้นฉบับ)
4. พิมพ์เกิน 1 ตัว ตัวแล้วปล่อยผ่าน ตัวต่อไปพิมพ์ถูก ไม่มีการลบ(โค้ดจะไม่ตรงต้นฉบับ) ทำให้ตัวต่อไปเคลื่อนตาม # แก้ได้
5. พิมพ์เกิน n ตัว ตัวแล้วปล่อยผ่าน ตัวต่อไปพิมพ์ถูก ไม่มีการลบ(โค้ดจะไม่ตรงต้นฉบับ) ทำให้ตัวต่อไปเคลื่อนตาม

this is a test typing.
[116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 105, 110, 103, 46]

this is a test typeying.
[116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, (101), (121), 105, 110, 103, 46]

data1 = [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 105, 110, 103, 46]
over = [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 101, 105, 110, 103, 46]
typo = [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 222, 110, 103, 46]

78, 32, 66, 89
84, 73, 79, 78

# print(keyCode_gen, len(keyCode_gen))
    # print(read_data, len(read_data))
    # print("keyCode_gen_length:", len(keyCode_gen))
    # print()
    # for i in range(len(keyCode_gen)):
    #     if keyCode_gen[i] == read_data[i]:
    #         new_list.append(read_data[i])
    #     else:
    #         if keyCode_gen[i] == read_data[i+1]:
    #             new_list.append(read_data[i+1])
    #         else:
    #             if keyCode_gen[i] == read_data[i+2]:
    #                 new_list.append(read_data[i+2])
    #             else:
    #                 if keyCode_gen[i] == read_data[i+3]:
    #                     new_list.append(read_data[i+3])
    #                 else:
    #                     if keyCode_gen[i] == read_data[i+4]:
    #                         new_list.append(read_data[i+4])
    #                         if keyCode_gen[i] == read_data[i+5]:
    #                             new_list.append(read_data[i+5])
    #                             if keyCode_gen[i] == read_data[i+6]:
    #                                 new_list.append(read_data[i+6])
    #                             else:
    #                                 new_list.append(0)
        # if i == len(read_data):
        #     break
    # print(keyCode_gen, len(keyCode_gen))
    # print("read_data_length:", len(read_data))
    # print("new_list_length:", len(new_list))
    # print(new_list)

    # index = 0
    # for i, j in zip(keyCode_gen, read_data):
    #     if i != j:
    #         print(index, i, j)
    #         # read_data[i] = 0
    #         break
    #     index += 1
    # # print(read_data)

    data1 = [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 105, 110, 103, 46]
    over = [116, 104, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 101, 105, 110, 103, 46]
    typo = [116, 104, 105, 123, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 116, 32, 116, 121, 112, 222, 110, 103, 46]
    # checking(data1, typo)

    data1 = [116, 104, 8, 105, 115, 32, 105, 115, 32, 97, 32, 116, 101, 115, 321, 32, 116, 121, 112, 105, 110, 321, 21]
    # checking(keyCode_gen["en_puma"], data1)
    # print(data1.count(116))
    # print(data1.pop(data1.index(116)))